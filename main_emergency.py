from io import BytesIO
from colorama import init, Fore, Style
init(autoreset=True)

import telebot, config, pyautogui, traceback, config
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton

bot = telebot.TeleBot(config.bot_token)

KeyboardButtons = [
    "–ö–æ–º–∞–Ω–¥–∞",
    "–ö–æ–Ω—Å–æ–ª—å",
    "–í—ã–π—Ç–∏ –∏–∑ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"
]
markup = ReplyKeyboardMarkup(resize_keyboard=True)
markup.row(KeyboardButton(KeyboardButtons[0]))
markup.row(KeyboardButton(KeyboardButtons[1]))
markup.row(KeyboardButton(KeyboardButtons[2]))

def getScreenshot() -> BytesIO:
    import pyautogui
    output = BytesIO()
    pyautogui.screenshot().save(output, format='PNG')
    return output


for dev in config.developers:
    try:
        img = getScreenshot()
        img.seek(0)
        user_name = bot.get_chat_member(dev, dev).user.username
        bot.send_photo(dev, img, f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!!! –ë–û–¢ –ó–ê–ü–£–©–ï–ù –í –ê–í–ê–†–ò–ô–ù–û–ú –†–ï–ñ–ò–ú–ï!!! <a href='tg://user?id={dev}'>@{user_name}</a>Ô∏è ‚ö†Ô∏è", reply_markup=markup, parse_mode="HTML")
    except:
        try:
            user_name = bot.get_chat_member(dev, dev).user.username
            bot.send_message(dev, f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!!! –ë–û–¢ –ó–ê–ü–£–©–ï–ù –í –ê–í–ê–†–ò–ô–ù–û–ú –†–ï–ñ–ò–ú–ï!!! <a href='tg://user?id={dev}'>@{user_name}</a>Ô∏è ‚ö†Ô∏è", reply_markup=markup, parse_mode="HTML")
        except:
            pass

@bot.message_handler()
def on_message(message: Message):
    global KeyboardButtons, markup
    if not message.from_user.id in config.developers:
        bot.send_message(message.chat.id, "‚ö†Ô∏è–í–µ–¥—É—Ç—Å—è —Ä–∞–±–æ—Ç—ã –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ—à–∏–±–æ–∫! –ë–æ—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!‚ö†Ô∏è")
    else:
        text = message.text
        if not text in KeyboardButtons:
            return
        if text == KeyboardButtons[0]:
            bot.send_message(message.chat.id, "–ñ–¥—É –∫–æ–º–∞–Ω–¥—É...", reply_markup=None)
            bot.register_next_step_handler_by_chat_id(message.chat.id, listen_command)
            return
        if text == KeyboardButtons[1]:
            try:
                img = getScreenshot()
                img.seek(0)
                bot.send_photo(message.chat.id, img, "–°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ–Ω—Å–æ–ª–∏", reply_markup=markup)
            except:
                pass
        if text == KeyboardButtons[2]:
            newMarkup = ReplyKeyboardMarkup(resize_keyboard=True)
            newMarkup.row(KeyboardButton("–ú–µ–Ω—é üìã"))
            bot.send_message(message.chat.id, "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞...", reply_markup=newMarkup)
            bot.stop_bot()
            quit()


def listen_command(message: Message):
    global markup
    try:
        exec(message.text)
    except:
        print(Fore.LIGHTRED_EX + Style.BRIGHT + traceback.format_exc(chain=True))
    try:
        img = getScreenshot()
        img.seek(0)
        bot.send_photo(message.chat.id, img, "–°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ–Ω—Å–æ–ª–∏", reply_markup=markup)
    except:
        pass

bot.polling(non_stop=True)
